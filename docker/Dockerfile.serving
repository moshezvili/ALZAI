# Serving Container for Clinical ML API
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Install system dependencies including curl for health checks
RUN apt-get update && apt-get install -y \
    gcc \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements (minimal for serving)
COPY requirements.txt .

# Install only serving dependencies with explicit versions
RUN pip install --no-cache-dir \
    fastapi>=0.100.0 \
    uvicorn[standard]>=0.22.0 \
    pydantic>=2.0.0 \
    pandas>=2.0.0 \
    numpy>=1.24.0 \
    scikit-learn>=1.3.0 \
    lightgbm>=4.0.0 \
    xgboost>=1.7.0 \
    catboost>=1.2.0 \
    imbalanced-learn>=0.11.0 \
    joblib>=1.3.0 \
    PyYAML>=6.0

# Copy source code (minimal serving components + necessary pipeline modules)
COPY src/serving/ ./src/serving/
COPY src/utils/ ./src/utils/
COPY src/pipeline/ ./src/pipeline/

# Create proper __init__.py for package structure
RUN echo "# Serving container package init" > ./src/__init__.py

COPY config/serving_config.yaml ./config/

# Copy trained model artifacts (these should be mounted or copied in)
COPY models/ ./models/

# Create non-root user for security
RUN useradd -m -u 1000 appuser && chown -R appuser:appuser /app
USER appuser

# Set environment variables
ENV PYTHONPATH=/app
ENV MODEL_DIR=/app/models

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the API server
CMD ["python", "-m", "uvicorn", "src.serving.api:app", \
     "--host", "0.0.0.0", "--port", "8000"]
